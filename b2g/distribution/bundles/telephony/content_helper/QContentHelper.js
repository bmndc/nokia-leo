// Copyright (c) 2012-2016 Qualcomm Technologies, Inc. All Rights Reserved. Confidential and Proprietary - Qualcomm Technologies, Inc.
'use strict';const{classes:Cc,interfaces:Ci,utils:Cu,results:Cr}=Components;Cu.import('resource://gre/modules/XPCOMUtils.jsm');Cu.import('resource://gre/modules/Services.jsm');Cu.import('resource://gre/modules/systemlibs.js');Cu.import('resource://gre/modules/PhoneNumberUtils.jsm');Cu.import('resource://qcommon/QCommon.js',this);Cu.import('resource://gre/modules/Timer.jsm');const QCONTENT_HELPER_CID=Components.ID('{E84CEB54-CF91-11E1-BACF-0D1F6188709B}');const nsITelephonyService=Ci.nsITelephonyService;const SERVICE_CATEGORY_CMAS_PRESIDENTIAL_LEVEL_ALERT=0x1000;const SERVICE_CATEGORY_CMAS_EXTREME_THREAT=0x1001;const SERVICE_CATEGORY_CMAS_TEST_MESSAGE=0x1004;const MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL=0x1112;const MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_OBSERVED=0x1113;const MESSAGE_ID_CMAS_LAST_IDENTIFIER=0x112F;const MMI_MATCH_GROUP_FULL_MMI=1;const MMI_MATCH_GROUP_MMI_PROCEDURE=2;const MMI_MATCH_GROUP_SERVICE_CODE=3;const MMI_MATCH_GROUP_SIA=5;const MMI_MATCH_GROUP_SIB=7;const MMI_MATCH_GROUP_SIC=9;const MMI_MATCH_GROUP_PWD_CONFIRM=11;const MMI_MATCH_GROUP_DIALING_NUMBER=12;const MMI_MAX_LENGTH_SHORT_CODE=2;const MMI_END_OF_USSD='#';const DATA_TYPES_DEFAULT=1<<0;const DATA_TYPES_MMS=1<<1;const DATA_TYPES_SUPL=1<<2;const DATA_TYPES_IMS=1<<3;const DATA_TYPES_DUN=1<<4;const DATA_TYPES_HIPRI=1<<5;const STK_PROVIDE_LOCAL_INFO=0x26;const STK_CMD_QUAL_DATE_TIMEZONE=3;const STK_CMD_QUAL_LANGUAGE=4;const STK_CMD_GET_INKEY=0x22;const STK_CMD_TIMER_MANAGEMENT=0x27;const DEFAULT_EMERGENCY_NUMBERS='911,112';const kCellBroadcastSearchList='ril.cellbroadcast.searchlist';const kCellBroadcastDisabled='ril.cellbroadcast.disabled';const kCmasEnabled='cmas.enabled';const kSysMsgListenerReadyObserverTopic='system-message-listener-ready';const kCurrentLanguage='language.current';const kDtmfToneType='phone.dtmf.type';const kDiskSpaceWatcherObserverTopic='disk-space-watcher';const kNetworkConnStateChangedTopic='network-connection-state-changed';const kGeoEnabled='geolocation.enabled';const kDataRoaming='ril.data.roaming_enabled';const kDataRoamingCustomizedValue='ril.data.roaming.customized_value';const kDataRoamingDomesticCustomized='data.roaming.domestic.customized';const kDataEnabled='ril.data.enabled';const kApnSettings='ril.data.apnSettings';const kOperatorvariantIccId='operatorvariant.iccId';const kDataServiceId='ril.data.defaultServiceId';const kPcoValueChangeObserverTopic='pco-value-change';const kTetheringUSBEnabled='tethering.usb.enabled';const kTetheringWIFIEnable='tethering.wifi.enabled';const kMmsServiceMode='ril.mms.service_mode';const RIL_GECKO_ERROR_INVALID_PARAMETER='InvalidParameter';const RIL_GECKO_ERROR_MODE_NOT_SUPPORTED='ModeNotSupported';const RIL_GECKO_ERROR_GENERIC_FAILURE='GenericFailure';XPCOMUtils.defineLazyServiceGetter(this,'gSettingsService','@mozilla.org/settingsService;1','nsISettingsService');XPCOMUtils.defineLazyServiceGetter(this,'gMessageManager','@qti.qualcomm.com/QMessageManager;1','nsIQMessageManager');XPCOMUtils.defineLazyServiceGetter(this,'gMobileConnectionService','@mozilla.org/mobileconnection/mobileconnectionservice;1','nsIMobileConnectionService');XPCOMUtils.defineLazyServiceGetter(this,'gIccMessenger','@mozilla.org/ril/system-messenger-helper;1','nsIIccMessenger');XPCOMUtils.defineLazyServiceGetter(this,'gStkCmdFactory','@mozilla.org/icc/stkcmdfactory;1','nsIStkCmdFactory');XPCOMUtils.defineLazyServiceGetter(this,'gSystemMessenger','@mozilla.org/system-message-internal;1','nsISystemMessagesInternal');XPCOMUtils.defineLazyGetter(this,'RIL',function(){let obj={};Cu.import('resource://gre/modules/ril_consts.js',obj);return obj;});function QContentHelper(){this.log=new LogUtils('QCONTENT_HELPER');this.debug=this.log.debug.bind(this.log);this.debug('Starting Telephony Content Helper Interface');let lock=gSettingsService.createLock();lock.get(kCellBroadcastSearchList,this);lock.get(kCellBroadcastDisabled,this);lock.get(kCmasEnabled,this);lock.get(kCurrentLanguage,this);lock.get(kGeoEnabled,this);lock.get(kDataRoaming,this);lock.get(kDataRoamingDomesticCustomized,this);lock.get(kDataRoamingCustomizedValue,this);lock.get(kDataEnabled,this);lock.get(kOperatorvariantIccId,this);lock.get(kDataServiceId,this);lock.get(kMmsServiceMode,this);lock.get(kTetheringUSBEnabled,this);lock.get(kTetheringWIFIEnable,this);lock.get(kDtmfToneType,this);this._clientId=-1;this._messageManagerByRequest={};this._cellBroadcastSearchLists={CDMA_NOT_SETTABLE:[SERVICE_CATEGORY_CMAS_PRESIDENTIAL_LEVEL_ALERT,SERVICE_CATEGORY_CMAS_PRESIDENTIAL_LEVEL_ALERT+1],GSM_NOT_SETTABLE:[MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL,MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL+1],CDMA_CMAS_SETTABLE:[SERVICE_CATEGORY_CMAS_EXTREME_THREAT,SERVICE_CATEGORY_CMAS_TEST_MESSAGE+1],GSM_CMAS_SETTABLE:[MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_OBSERVED,MESSAGE_ID_CMAS_LAST_IDENTIFIER+1]};this._carrierOneiccIdList=['8991840','8991854','8991855','8991856','8991857','8991858','8991859','899186','8991870','8991871','8991872','8991873','8991874'];this.isUcs2=false;this.isPacked=false;this.language='en';this._cellBroadcastDisabled=false;this._cmasEnabled=false;this._hasIccIdUpdated=false;this._smsStorageAvailable=null;Services.obs.addObserver(this,'system-reboot',false);Services.obs.addObserver(this,'system-power-off',false);Services.obs.addObserver(this,'xpcom-shutdown',false);Services.obs.addObserver(this,'mozsettings-changed',false);Services.obs.addObserver(this,kSysMsgListenerReadyObserverTopic,false);Services.obs.addObserver(this,kDiskSpaceWatcherObserverTopic,false);Services.obs.addObserver(this,kNetworkConnStateChangedTopic,false);this._sysMsgListenerReady=false;this._callback=0;this.newIccid=null;this.oldIccid=null;}
QContentHelper.prototype={classID:QCONTENT_HELPER_CID,classInfo:XPCOMUtils.generateCI({classID:QCONTENT_HELPER_CID,classDescription:'QContentHelper',interfaces:[Ci.nsIQContentHelper]}),QueryInterface:XPCOMUtils.generateQI([Ci.nsIQContentHelper,Ci.nsIObserver,Ci.nsISettingsServiceCallback,Ci.nsIMobileConnectionListener]),notifyIccInfoChanged:function notifyIccInfoChanged(iccId){if(this._hasIccIdUpdated||iccId==null){return;}
this.newIccid=iccId;this.debug('notifyIccInfoChanged, newIccid = '+this.newIccid+'oldIccid = '+this.oldIccid);if(this.newIccid&&this.oldIccid&&(this.newIccid===this.oldIccid)){this.debug('locking for apnsettings due to IccInfoChanged');let lock=gSettingsService.createLock();lock.get(kApnSettings,this);this._hasIccIdUpdated=true;}},saveRequestTarget:function saveRequestTarget(msg){let requestId=msg.json.data.requestId;if(!requestId){this.debug('Content is not interested in a response');return;}
this._messageManagerByRequest[requestId]=msg.target;},sendRequestResults:function sendRequestResults(requestType,options){let target=this._messageManagerByRequest[options.data.requestId];delete this._messageManagerByRequest[options.data.requestId];if(!target){this.debug('Target for this request is empty');return;}
target.sendAsyncMessage(requestType,options);},registerCallback:function nsIQContentHelper_registerCallback(cb){this._callback=cb;},setClientId:function nsIQContentHelper_setClientId(clientId){this.debug('Setting client id '+clientId);this._clientId=clientId;this.log.setClientId(clientId);gMessageManager.registerMessageHandler(this,clientId);},isEmergencyNumber:function nsIQContentHelper_isEmergencyNumber(number){let ecclistName=((this._clientId==0)?'ril.ecclist':('ril.ecclist'+this._clientId));let eccList=libcutils.property_get(ecclistName);if(!eccList){eccList=libcutils.property_get('ro.ril.ecclist');}
if(!eccList){eccList=DEFAULT_EMERGENCY_NUMBERS;}
let parsedEccList=eccList.split(',');return parsedEccList.indexOf(number)!=-1;},reportSmsMemoryStatus:function
nsIQContentHelper_reportSmsMemoryStatus(smsStorageAvailable){if(this._smsStorageAvailable!==smsStorageAvailable){this._smsStorageAvailable=smsStorageAvailable;this._callback.reportSmsMemoryStatus(smsStorageAvailable);}},sendMessage:function nsIQContentHelper_sendMessage(aMessageName,aMessageData){this.debug('sendMessage to content process: '+aMessageName+' '+
aMessageData);var message={clientId:this._clientId,data:eval('('+aMessageData+')')};switch(aMessageName){case'RIL:GetCardLockResult':case'RIL:SetUnlockCardLockResult':case'RIL:CardLockRetryCount':case'RIL:ReadIccContacts':case'RIL:UpdateIccContact':case'RIL:MatchMvno':case'RIL:IccOpenChannel':case'RIL:IccExchangeAPDU':case'RIL:IccCloseChannel':case'RIL:GetServiceState':this.sendRequestResults(aMessageName,message);return;case'RIL:CardStateChanged':case'RIL:IccInfoChanged':gMessageManager.sendTargetMessage('icc',aMessageName,message);Services.obs.notifyObservers(null,'rilcontext-changed',null);this.notifyIccInfoChanged(message.data.iccid);return;case'RIL:StkSessionEnd':gMessageManager.sendTargetMessage('icc',aMessageName,message);return;case'icc-stkcommand':gIccMessenger.notifyStkProactiveCommand(message.data.iccId,gStkCmdFactory.createCommand(message.data.command));return;case'RIL:StkCommand':if(message.data.typeOfCommand==0x23){if(message.data.options.isUCS2!==undefined){this.isUcs2=message.data.options.isUCS2;}
if(message.data.options.isPacked!==undefined){this.isPacked=message.data.options.isPacked;}
this.debug('Cache coding scheme for GET_INPUT: isUcs2 = '+
this.isUcs2+', isPacked = '+this.isPacked);}
gMessageManager.sendTargetMessage('icc',aMessageName,message);return;default:this.debug('Message '+aMessageName+' is not supported');}},receiveMessage:function receiveMessage(msg){this.debug("receiveMessage: '"+msg.name+"'");if(msg.json){var data=msg.json.data;}
switch(msg.name){case'RIL:GetRilContext':var baseRilContext={};this._callback.getRilContext(baseRilContext);var typedRilContext=_createTypedRilContext(baseRilContext);this.debug('Sending Rilcontext: '+JSON.stringify(typedRilContext));return typedRilContext;case'RIL:GetCardLockEnabled':this.saveRequestTarget(msg);this._callback.getCardLock(data.lockType,data.requestId);break;case'RIL:UnlockCardLock':this.saveRequestTarget(msg);this._callback.unlockCardLock(data.lockType,data.password,data.newPin,data.requestId);break;case'RIL:SetCardLockEnabled':this.saveRequestTarget(msg);this._callback.setCardLock(data.lockType,data.password,data.enabled,data.requestId);break;case'RIL:ChangeCardLockPassword':this.saveRequestTarget(msg);this._callback.changeCardLockPassword(data.lockType,data.password,data.newPassword,data.requestId);break;case'RIL:GetCardLockRetryCount':this.saveRequestTarget(msg);this._callback.getCardLockRetryCount(data.lockType,data.requestId);break;case'RIL:SendStkMenuSelection':this._callback.sendMenuSelection(data.itemIdentifier,data.helpRequested);break;case'RIL:SendStkTimerExpiration':this._callback.sendTimerExpiration(data.timer.timerId,data.timer.timerValue);break;case'RIL:SendStkEventDownload':this._callback.sendEventDownload(data.event.eventType,data.event.language,data.event.terminationCause);break;case'RIL:SendStkResponse':let response={cmdDet:{compRequired:true,commandNumber:data.command.commandNumber,typeOfCommand:data.command.typeOfCommand,commandQualifier:data.command.commandQualifier},resultcode:data.resultCode,additionalInformation:-1,itemIdentifier:0,text:null,duration:{timeUnit:-1,timeInterval:-1},timer:{timerId:0,timerValue:-1},ucs2:false,packed:false,confirmed:false,localInfo:{dateTime:{year:0,month:0,day:0,hours:0,minutes:0,seconds:0},timeZoneOffset:0,language:null}};if(data.additionalInformation!==undefined){response.additionalInformation=data.additionalInformation;}
if(data.itemIdentifier!==undefined){response.itemIdentifier=data.itemIdentifier;}
if(data.isYesNo!==undefined){response.text=data.isYesNo?'01':'00';}else if(data.input!==undefined){response.text=data.input;}
if(data.hasConfirmed!==undefined){response.confirmed=data.hasConfirmed;}
if(data.isUCS2===undefined&&data.isPacked===undefined&&data.command.typeOfCommand==0x23){this.debug('Use cached encoding scheme: isUcs2 = '+this.isUcs2+', isPacked = '+this.isPacked);data.isUCS2=this.isUcs2;data.isPacked=this.isPacked;this.isUcs2=false;this.isPacked=false;}
response.ucs2=data.isUCS2;response.packed=data.isPacked;if(data.command.typeOfCommand==STK_PROVIDE_LOCAL_INFO){if(data.command.commandQualifier==STK_CMD_QUAL_LANGUAGE){if(data.localInfo!==undefined&&data.localInfo.language!==undefined){response.localInfo.language=data.localInfo.language.slice(0,2);}else{response.localInfo.language=this.language.slice(0,2);}}
if(data.command.commandQualifier==STK_CMD_QUAL_DATE_TIMEZONE){let currentDate=data.localInfo.date;response.localInfo.dateTime.year=currentDate.getFullYear()%100;response.localInfo.dateTime.month=currentDate.getMonth()+1;response.localInfo.dateTime.day=currentDate.getDate();response.localInfo.dateTime.hours=currentDate.getHours();response.localInfo.dateTime.minutes=currentDate.getMinutes();response.localInfo.dateTime.seconds=currentDate.getSeconds();response.localInfo.timeZoneOffset=currentDate.getTimezoneOffset();}}
if((data.command.typeOfCommand==STK_CMD_GET_INKEY)&&(data.command.options.duration!==undefined)&&(data.command.options.duration.timeUnit!=-1)&&(data.command.options.duration.timeInterval!=-1)){response.duration=data.command.options.duration;}
if((data.command.typeOfCommand==STK_CMD_TIMER_MANAGEMENT)&&(data.timer!==undefined)){if(data.timer.timerId>0){response.timer.timerId=data.timer.timerId;}
if((data.timer.timerValue!==undefined)&&(data.timer.timerValue>-1)){response.timer.timerValue=Math.round(data.timer.timerValue);}}
this._callback.sendTerminalResponse(response);break;case'RIL:ReadIccContacts':this.saveRequestTarget(msg);this._callback.readIccContacts(data.requestId,data.contactType);break;case'RIL:UpdateIccContact':this.saveRequestTarget(msg);let anr=(Array.isArray(data.contact.anr))?data.contact.anr:[];this.debug('Update Contact - '+JSON.stringify(data));this._callback.updateIccContact(data.requestId,data.contactType,data.contact.contactId,data.contact.alphaId,data.contact.number,data.contact.email,anr,anr.length,data.pin2);break;case'RIL:MatchMvno':this.saveRequestTarget(msg);this._matchMvno(data);break;case'RIL:IccOpenChannel':this.saveRequestTarget(msg);this._callback.iccOpenChannel(data.requestId,data.aid);break;case'RIL:IccExchangeAPDU':this.saveRequestTarget(msg);this._callback.iccExchangeApdu(data.requestId,data.apdu.cla,data.apdu.command,data.channel,data.apdu.path,data.apdu.p1,data.apdu.p2,data.apdu.p3,data.apdu.data,data.apdu.data2);break;case'RIL:IccCloseChannel':this.saveRequestTarget(msg);this._callback.iccCloseChannel(data.requestId,data.channel);break;case'RIL:GetServiceState':this.saveRequestTarget(msg);this._callback.getIccServiceState(data.requestId,data.service);break;default:this.debug('Message '+msg.name+' is not supported');}},observe:function nsIObserver_observe(subject,topic,data){this.debug('Received observer notification: '+topic);switch(topic){case kSysMsgListenerReadyObserverTopic:this.debug('system message listener is now ready');Services.obs.removeObserver(this,kSysMsgListenerReadyObserverTopic);this._sysMsgListenerReady=true;break;case'mozsettings-changed':if('wrappedJSObject'in subject){subject=subject.wrappedJSObject;}
if(subject.key==kDataServiceId){this.debug('Settings ril.data.defaultServiceId with id = '+
subject.value);this._callback.UpdateSettingDefaultDataService(subject.value);}
this.handle(subject.key,subject.value,subject.isInternalChange);break;case'xpcom-shutdown':Services.obs.removeObserver(this,'xpcom-shutdown');Services.obs.removeObserver(this,'mozsettings-changed');Services.obs.removeObserver(this,'system-clock-changed');Services.obs.removeObserver(this,kDiskSpaceWatcherObserverTopic);Services.obs.removeObserver(this,kNetworkConnStateChangedTopic);break;case'system-reboot':case'system-power-off':this._callback.shutdown();break;case kDiskSpaceWatcherObserverTopic:this.reportSmsMemoryStatus(data!='full');break;case kNetworkConnStateChangedTopic:this.debug('kNetworkConnStateChangedTopic is received');let network=subject.QueryInterface(Ci.nsINetworkInfo);if(network.state==Ci.nsINetworkInfo.NETWORK_STATE_DISCONNECTED){this._callback.OnNetworkChangeAlert(false,network.type);}
if(network.type==Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_DUN){this.debug('Network changes on NETWORK_TYPE_MOBILE_DUN');if(network.state==Ci.nsINetworkInfo.NETWORK_STATE_CONNECTED){this._callback.UpdateTetheringNetworkStateChangesBool(true);}else if(network.state==Ci.nsINetworkInfo.NETWORK_STATE_DISCONNECTED){this._callback.UpdateTetheringNetworkStateChangesBool(false);}}
break;}},_validateApnSetting:function(aApnSetting){this.debug('ApnSetting : '+JSON.stringify(aApnSetting));return(aApnSetting&&aApnSetting.types&&aApnSetting.types.length);},_convertApnType:function(aApnType){switch(aApnType){case'default':return Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE;case'mms':return Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_MMS;case'supl':return Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_SUPL;case'ims':return Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_IMS;case'dun':return Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_DUN;case'fota':return Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_FOTA;case'ia':return Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_IA;default:return Ci.nsINetworkInfo.NETWORK_TYPE_UNKNOWN;}},applyApns:function applyApns(apnSettingsOut,apnIndex){this.debug('applyApnSettings');this._callback.applyApnSettings(apnSettingsOut,apnIndex);},applyApnSettings:function applyApnSettings(allApnSettings){let apnSettingsForSub=allApnSettings[this._clientId];if(!apnSettingsForSub){this.debug('no sub apn settings for client id '+this._clientId);return;}
this.setInitialAttachApn(apnSettingsForSub);let apnSettingsOut=[];let apnIndex=0;for(apnIndex=0;apnSettingsForSub[apnIndex];apnIndex++){let inputApnSetting=apnSettingsForSub[apnIndex];if(!inputApnSetting){continue;}
apnSettingsOut.push(_parseApnSettings(inputApnSetting));}
this.debug('Setting apn settings for client id '+this._clientId);let delayedApnSettings=()=>this.applyApns(apnSettingsOut,apnIndex);setTimeout(delayedApnSettings,1000);},setInitialAttachApn:function setInitialAttachApn(aNewApnSettings){this.debug('setInitialAttachApn is called in QContentHelper.js');if(!aNewApnSettings){return;}
let iaApnSetting;let defaultApnSetting;let firstApnSetting;for(let inputApnSetting of aNewApnSettings){if(!this._validateApnSetting(inputApnSetting)){continue;}
if(!firstApnSetting){firstApnSetting=inputApnSetting;}
for(let i=0;i<inputApnSetting.types.length;i++){let apnType=inputApnSetting.types[i];let networkType=this._convertApnType(apnType);if(networkType==Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_IA){if(!iaApnSetting){iaApnSetting=inputApnSetting;}}else if(networkType==Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE){if(!defaultApnSetting){defaultApnSetting=inputApnSetting;}}}}
let initalAttachApn;if(iaApnSetting){initalAttachApn=iaApnSetting;}else if(defaultApnSetting){initalAttachApn=defaultApnSetting;}else if(firstApnSetting){if(!this.allowInitialAttachForIccId(this._callback.iccId)){this.debug('InitialAttach for firstApn is not allowed!');return;}
initalAttachApn=firstApnSetting;}else{this.debug('Can not find any initial attach APN!');return;}
this.debug('InitialAttach APN '+initalAttachApn.apn+'on sub'+this._clientId);let connection=gMobileConnectionService.getItemByServiceId(this.clientId);let dataInfo=connection&&connection.data;if(dataInfo==null){return;}
let pdpType=!dataInfo.roaming?RIL.RIL_DATACALL_PDP_TYPES.indexOf(initalAttachApn.protocol):RIL.RIL_DATACALL_PDP_TYPES.indexOf(initalAttachApn.roaming_protocol);if(pdpType==-1){pdpType=RIL.GECKO_DATACALL_PDP_TYPE_IP;}else{pdpType=RIL.RIL_DATACALL_PDP_TYPES[pdpType];}
this._callback.setInitialAttachApn(initalAttachApn.apn,pdpType,initalAttachApn.authtype,initalAttachApn.user,initalAttachApn.password);},allowInitialAttachForIccId:function allowInitialAttachForIccId(iccId){this.debug('allowInitialAttachForIccId : iccId '+iccId);for(let i=0;this._carrierOneiccIdList[i];i++){if(iccId&&iccId.startsWith(this._carrierOneiccIdList[i])){return false;}}
return true;},handle:function nsISettingsServiceCallback_handle(aName,aResult,aIsInternalSetting){switch(aName){case kDataRoaming:case kDataRoamingDomesticCustomized:this._callback.updateDataSettingsBool(aName,Array.isArray(aResult)?aResult[this._clientId]:aResult);break;case kDataEnabled:this._callback.updateDataSettingsBool(aName,aResult);break;case kMmsServiceMode:this.debug('QCONTENT_HELPER handle '+kMmsServiceMode+' result:'+JSON.stringify(aResult));if(aResult==1){libcutils.property_set('dom.mms.service_mode','true');}else{libcutils.property_set('dom.mms.service_mode','false');}
this.debug("QCONTENT_HELPER read back mms.service_mode:"+libcutils.property_get('dom.mms.service_mode'));break;case kTetheringUSBEnabled:this._callback.updateDataSettingsBool(aName,aResult);break;case kTetheringWIFIEnable:this._callback.updateDataSettingsBool(aName,aResult);break;case kDataServiceId:case kDataRoamingCustomizedValue:this.debug('Got ril.data.defaultServiceId with id = '+aResult);this._callback.updateDataSettingsInt(aName,aResult);break;case kGeoEnabled:this.debug('Got geolocation.enabled with id = '+aResult);this._callback.updateGeoSettingsBool(aName,aResult);break;case kApnSettings:this.debug('get ApnSettings and iccIdUpdated = '+
this._hasIccIdUpdated+'on sub'+this._clientId);if(this._hasIccIdUpdated){this.applyApnSettings(aResult);}
break;case kOperatorvariantIccId:if(this._hasIccIdUpdated){break;}
aResult=aResult||0;this.oldIccid=aResult[this._clientId];this.debug('operatorvariant oldIccid = '+this.oldIccid+'newIccid = '+this.newIccid);if(this.oldIccid&&this.newIccid&&this.oldIccid===this.newIccid){this.debug('locking for apnsettings change on sub'+this._clientId);let lock=gSettingsService.createLock();lock.get(kApnSettings,this);this._hasIccIdUpdated=true;}
break;case kCellBroadcastSearchList:this.setCellBroadcastSearchList(aResult);break;case kCellBroadcastDisabled:this._cellBroadcastDisabled=aResult[this._clientId];this.debug(kCellBroadcastDisabled+' setting changed to '+
JSON.stringify(aResult));this.updateCellBroadcastSettings();break;case kCmasEnabled:this._cmasEnabled=aResult[this._clientId];this.debug(kCmasEnabled+' setting changed to '+
JSON.stringify(aResult));this.updateCellBroadcastSettings();break;case kCurrentLanguage:this.language=aResult;break;case kDtmfToneType:this._callback.setDtmfShortTone(aResult=='short');break;}},handleError:function nsISettingsServiceCallback_handleError(aErrorMessage){this.debug('Error while reading RIL setting:'+aErrorMessage);},setCharSetting:function setCharSetting(aKey,aValue){gSettingsService.createLock().set(aKey,aValue,null);},setIntSetting:function setIntSetting(aKey,aValue){gSettingsService.createLock().set(aKey,aValue,null);},setBoolSetting:function setBoolSetting(aKey,aValue,aDisable){if(aDisable){gSettingsService.createLock().set(aKey,null,null);}else{gSettingsService.createLock().set(aKey,aValue,null);}},updatePcoData:function nsIQContentHelper_updatePcoData(aApnType,aBearerProto,aPcoId,aContents,aCount){this.debug('updatePcoData aBearerProto='+aBearerProto+' ,aPcoId='+aPcoId+' ,aContents='+JSON.stringify(aContents)+' ,aCount='+aCount);let pcoValue={clientId:this._clientId,iccId:this.newIccid,apnType:aApnType,bearerProto:aBearerProto,pcoId:aPcoId,contents:aContents};try{gSystemMessenger.broadcastMessage(kPcoValueChangeObserverTopic,pcoValue);}catch(e){this.debug('Failed to broadcastPcoChangeMessage : '+e);}
Services.obs.notifyObservers({wrappedJSObject:pcoValue},kPcoValueChangeObserverTopic,null);},parseMmi:function nsIQContentHelper_parseMmi(mmiString){let mmiCode={};if(!mmiString||!mmiString.length){return null;}
if(this._mmiRegExp==null){let pattern='(^(\\*[*#]?|##?)';pattern+='(\\d{2,3})';pattern+='(\\*([^*#]*)(\\*([^*#]*)(\\*([^*#]*)';pattern+='(\\*([^*#]*))?)?)?)?#)';pattern+='([^#]*)$';this._mmiRegExp=new RegExp(pattern);}
let matches=this._mmiRegExp.exec(mmiString);if(matches!=null){this.debug('dialingNumber='+matches[MMI_MATCH_GROUP_DIALING_NUMBER]);mmiCode.poundString=matches[MMI_MATCH_GROUP_FULL_MMI];mmiCode.action=matches[MMI_MATCH_GROUP_MMI_PROCEDURE];mmiCode.serviceCode=matches[MMI_MATCH_GROUP_SERVICE_CODE];mmiCode.sia=matches[MMI_MATCH_GROUP_SIA];mmiCode.sib=matches[MMI_MATCH_GROUP_SIB];mmiCode.sic=matches[MMI_MATCH_GROUP_SIC];mmiCode.pwd=matches[MMI_MATCH_GROUP_PWD_CONFIRM];mmiCode.dialingNumber=matches[MMI_MATCH_GROUP_DIALING_NUMBER];if(!this._callback.isRatTypeCdma()&&mmiCode.dialingNumber!=null&&mmiCode.dialingNumber.endsWith(MMI_END_OF_USSD)&&mmiString.endsWith(MMI_END_OF_USSD)){mmiCode.poundString=mmiString;this.debug('mmiCode.poundString='+mmiCode.poundString);}}else if(mmiString.endsWith(MMI_END_OF_USSD)){mmiCode.poundString=mmiString;this.debug('poundString='+mmiCode.poundString);}else{mmiCode=null;}
return mmiCode;},setCellBroadcastList:function nsIQContentHelper_setCellBroadcastList(type,list,length){if(('CBMI'==type)||('CBMIR'==type)){this.debug('Updating '+type+' with '+list);this._cellBroadcastSearchLists[type]=length>0?list:[];this.updateCellBroadcastSettings();}else{this.debug('Unknown SMS-CB search list type '+type);}},setCellBroadcastSearchList:function setCellBroadcastSearchList(newList){let newListStr=newList[this._clientId];function resetSetting(listStr){if(listStr===undefined){listStr=['invalid'];}
gSettingsService.createLock().set(kCellBroadcastSearchList,listStr,null);}
function formatSearchList(newListStr){let parts=newListStr&&newListStr.split(',');let list=null;if(parts){let result,from,to;for(let range of parts){result=range.match(/^(\d+)(?:-(\d+))?$/);if(!result){throw'Malformed cell broadcast list:'+range;}
from=parseInt(result[1]);to=(result[2]!=null)?parseInt(result[2])+1:from+1;if((to<=from)||(from>=65536)||(from<0)){throw'Invalid cell broadcast range '+from+' to '+to;}
if(list==null){list=[];}
list.push(from);list.push(to);}}
return list;}
this.debug('Setting '+kCellBroadcastSearchList+' to '+
JSON.stringify(newList));let lastListStr=this._cellBroadcastSearchListStr&&this._cellBroadcastSearchListStr[this._clientId];if((newListStr==lastListStr)||(newListStr&&newListStr.gsm&&lastListStr&&(newListStr.gsm==lastListStr.gsm)&&(newListStr.cdma==lastListStr.cdma))){this.debug('Ignoring duplicate broadcast search list');return;}
this._cellBroadcastSearchLists.MMI={};try{this._cellBroadcastSearchLists.MMI.gsm=formatSearchList((newListStr&&newListStr.gsm)?newListStr.gsm:newListStr);this._cellBroadcastSearchLists.MMI.cdma=(newListStr&&newListStr.cdma)?formatSearchList(newListStr.cdma):this._cellBroadcastSearchLists.MMI.gsm;}catch(e){this.debug(e);resetSetting(this._cellBroadcastSearchListStr);return;}
this._cellBroadcastSearchListStr=newList;this.updateCellBroadcastSettings();},notifyVoiceChanged:function nsIMobileConnectionListener_notifyVoiceChagned(){if(this._cellBroadcastQueued){this.updateCellBroadcastSettings();}},updateCellBroadcastSettings:function updateCellBroadcastSettings(){function listsEqual(list1,list2){return JSON.stringify(list1)===JSON.stringify(list2);}
function mergeSearchLists(searchLists){let mergedSearchList=[];searchLists.forEach(function(searchList,index,searchLists){if(searchList!=null){for(let i=0;i<searchList.length;i+=2){mergedSearchList=_mergeCellBroadcastSearchList(mergedSearchList,searchList[i],searchList[i+1]);}}});return mergedSearchList;}
if(!('MMI'in this._cellBroadcastSearchLists)||(!this._callback.isRatTypeCdma()&&(!('CBMI'in this._cellBroadcastSearchLists)||!('CBMIR'in this._cellBroadcastSearchLists)))){return;}
let conn=gMobileConnectionService.getItemByServiceId(this._clientId);let voice=conn.voice;if((voice.connected!=true)&&(voice.emergencyCallsOnly!=true)){if(!this._cellBroadcastQueued){this.debug('Cell broadcast queued until service acquired');this._cellBroadcastQueued=true;conn.registerListener(this);}
return;}else{if(this._cellBroadcastQueued){conn.unregisterListener(this);this._cellBroadcastQueued=false;}}
let cdmaListSources=[this._cellBroadcastSearchLists.CDMA_NOT_SETTABLE];let gsmListSources=[this._cellBroadcastSearchLists.GSM_NOT_SETTABLE,this._cellBroadcastSearchLists.CBMI,this._cellBroadcastSearchLists.CBMIR];if(this._cellBroadcastDisabled==false){cdmaListSources.push(this._cellBroadcastSearchLists.MMI.cdma);gsmListSources.push(this._cellBroadcastSearchLists.MMI.gsm);if(this._cmasEnabled==true){cdmaListSources.push(this._cellBroadcastSearchLists.CDMA_CMAS_SETTABLE);gsmListSources.push(this._cellBroadcastSearchLists.GSM_CMAS_SETTABLE);}}
let cdmaList=mergeSearchLists(cdmaListSources);let gsmList=mergeSearchLists(gsmListSources);let activate=(cdmaList.length+gsmList.length)>0;let listsChanged=!listsEqual(cdmaList,this._cbCdmaList)||!listsEqual(gsmList,this._cbGsmList);if((activate&&listsChanged)||(this._cbActivated!=activate)){this._callback.setCellBroadcastConfig(activate,cdmaList,cdmaList.length,gsmList,gsmList.length);this._cbCdmaList=cdmaList;this._cbGsmList=gsmList;this._cbActivated=activate;}else{this.debug('Ignoring duplicate cell broadcast state');}},_matchMvno:function(data){if(!data||!data.mvnoData){data.errorMsg=RIL_GECKO_ERROR_INVALID_PARAMETER;}
if(!data.errorMsg){var rilContext={};this._callback.getRilContext(rilContext);switch(data.mvnoType){case Ci.nsIIcc.CARD_MVNO_TYPE_IMSI:if(!rilContext.value.imsi){data.errorMsg=RIL_GECKO_ERROR_GENERIC_FAILURE;}else{data.result=_matchImsi(rilContext.value.imsi,data.mvnoData);}
break;case Ci.nsIIcc.CARD_MVNO_TYPE_SPN:let spn=rilContext.value.iccInfo&&rilContext.value.iccInfo.spn;if(!spn){data.errorMsg=RIL_GECKO_ERROR_GENERIC_FAILURE;}else{data.result=(spn==data.mvnoData);}
break;case Ci.nsIIcc.CARD_MVNO_TYPE_GID:let gid1=this._callback.getGid1();if(!gid1){data.errorMsg=RIL_GECKO_ERROR_GENERIC_FAILURE;}else if(data.mvnoData.length>gid1.length){data.result=false;}else{data.result=((gid1.substring(0,data.mvnoData.length).toLowerCase())==(data.mvnoData.toLowerCase()));}
break;default:data.errorMsg=RIL_GECKO_ERROR_MODE_NOT_SUPPORTED;break;}}
this.sendMessage('RIL:MatchMvno',JSON.stringify(data));}};function _mergeCellBroadcastSearchList(list,from,to){if(!list){return[from,to];}
for(let i=0,f1,t1;i<list.length;){f1=list[i++];t1=list[i++];if(to==f1){list[i-2]=from;return list;}
if(to<f1){if(i>2){return list.slice(0,i-2).concat([from,to]).concat(list.slice(i-2));}else{return[from,to].concat(list);}}
if(from>t1){continue;}
let changed=false;if(from<f1){list[i-2]=from;changed=true;}
if(to<=t1){return list;}
let j=i;for(let f2,t2;j<list.length;){f2=list[j++];t2=list[j++];if(to>t2){continue;}
if(to<t2){if(to<f2){j-=2;}else if(to<t2){to=t2;}}
break;}
list[i-1]=to;if(j!=i){let ret=list.slice(0,i);if(j<list.length){ret=ret.concat(list.slice(j));}
return ret;}
return list;}
list.push(from);list.push(to);return list;}
function _parseApnSettings(apnSetting){let apntypes=0;for(let i=0;apnSetting.types[i];i++){if(apnSetting.types[i]=='default'){apntypes|=DATA_TYPES_DEFAULT;}else if(apnSetting.types[i]=='mms'){apntypes|=DATA_TYPES_MMS;}else if(apnSetting.types[i]=='supl'){apntypes|=DATA_TYPES_SUPL;}else if(apnSetting.types[i]=='ims'){apntypes|=DATA_TYPES_IMS;}else if(apnSetting.types[i]=='dun'){apntypes|=DATA_TYPES_DUN;}else if(apnSetting.types[i]=='hipri'){apntypes|=DATA_TYPES_HIPRI;}}
return{types:apntypes,apn:apnSetting.apn,user:apnSetting.user,password:apnSetting.password,httpProxyHost:apnSetting.proxy,httpProxyPort:apnSetting.port,mmsc:apnSetting.mmsc,mmsProxyHost:apnSetting.mmsproxy,mmsProxyPort:apnSetting.mmsport,authType:apnSetting.authtype,protocol:apnSetting.protocol,roamingProtocol:apnSetting.roaming_protocol,bearerBitmask:apnSetting.bearer||0};}
function _createTypedRilContext(baseRilContext){var context={};context.cardState=baseRilContext.value.cardState;context.imsi=baseRilContext.value.imsi;try{if(baseRilContext.value.iccInfo.iccType==='ruim'||baseRilContext.value.iccInfo.iccType==='csim'){context.iccInfo=baseRilContext.value.iccInfo.QueryInterface(Ci.nsICdmaIccInfo);}else if(baseRilContext.value.iccInfo.iccType==='sim'||baseRilContext.value.iccInfo.iccType==='usim'){context.iccInfo=baseRilContext.value.iccInfo.QueryInterface(Ci.nsIGsmIccInfo);}}catch(err){}
if(!context.iccInfo){context.iccInfo=baseRilContext.value.iccInfo;}
return context;}
function _matchImsi(imsi,mvnoData){if(mvnoData.length>imsi.length){return false;}
for(let i=0;i<mvnoData.length;i++){let digit=mvnoData[i];if((digit.toLowerCase()!=='x')&&(digit!==imsi[i])){return false;}}
return true;}
this.NSGetFactory=XPCOMUtils.generateNSGetFactory([QContentHelper]);