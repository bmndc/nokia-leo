// 
'use strict';const Cc=Components.classes;const Ci=Components.interfaces;const Cu=Components.utils;Cu.import('resource://gre/modules/XPCOMUtils.jsm');Cu.import('resource://gre/modules/ctypes.jsm');const TAG='QLOC:CneFrameworkWiFiSettingshelper: ';const kMozSettingsChanged='mozsettings-changed';const kWiFiSetting='wifi.enabled';const kWiFiTetherSetting='tethering.wifi.enabled';XPCOMUtils.defineLazyServiceGetter(this,'gConsoleService','@mozilla.org/consoleservice;1','nsIConsoleService');XPCOMUtils.defineLazyServiceGetter(this,'gObsService','@mozilla.org/observer-service;1','nsIObserverService');XPCOMUtils.defineLazyServiceGetter(this,'gSettingsService','@mozilla.org/settingsService;1','nsISettingsService');function CneFrameworkWiFiSettingshelper(){gConsoleService.logStringMessage(TAG+'CreateCneFrameworkWiFiSettingshelper interface');this.callback=0;}
CneFrameworkWiFiSettingshelper.prototype={classID:Components.ID('{6759c654-6d40-4252-bcd3-4f3c4fe93e61}'),contractID:'@qti.qualcomm.com/CneFrameworkWiFiSettingshelper;1',QueryInterface:XPCOMUtils.generateQI([Ci.nsICneFrameworkWiFiSettingsHelper,Ci.nsIObserver,Ci.nsISettingsServiceCallback]),registerSettingCallback:function nsICneFrameworkWiFiSettingsHelper_registerSettingCallback(cb){gConsoleService.logStringMessage(TAG+'Register callback: '+cb);this.callback=cb;},addObserver:function nsICneFrameworkWiFiSettingsHelper_addObserver(topic){gConsoleService.logStringMessage(TAG+'Add moz-settings observer: '+
topic);gObsService.addObserver(this,topic,false);},requestSettingValue:function nsICneFrameworkWiFiSettingsHelper_requestSettingValue(key){gConsoleService.logStringMessage(TAG+'Request setting value:'+key);let lock=gSettingsService.createLock();lock.get(key,this);},observe:function(aSubject,aTopic,aData){if(this.callback){switch(aTopic){case kMozSettingsChanged:{let setting=aSubject;if('wrappedJSObject'in setting){setting=setting.wrappedJSObject;}
switch(setting.key){case kWiFiSetting:this.callback.notifyWiFiSettingChange(setting.key,setting.value);break;}}
break;default:break;}}},handle:function nsISettingsServiceCallback_handle(aName,aResult,aMessage){switch(aName){case kWiFiSetting:this.callback.updateRequestedValueBool(aName,aResult);break;case kWiFiTetherSetting:this.callback.updateRequestedValueBool(aName,aResult);}},handleError:function nsISettingsServiceCallback_handleError(aErrorMessage){gConsoleService.logStringMessage(TAG+'Error while reading setting:'+aErrorMessage);},classInfo:XPCOMUtils.generateCI({'classID':Components.ID('{6759c654-6d40-4252-bcd3-4f3c4fe93e61}'),'contractID':'@qti.qualcomm.com/CneFrameworkWiFiSettingshelper;1','interfaces':[Ci.nsICneFrameworkWiFiSettingshelper],'flags':Ci.nsIClassInfo.DOM_OBJECT,'classDescription':'CneFrameworkWiFiSettingshelper class'})};this.NSGetFactory=XPCOMUtils.generateNSGetFactory([CneFrameworkWiFiSettingshelper]);