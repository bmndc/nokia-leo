/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface mozIDOMWindowProxy;

[scriptable, uuid(e8420a7b-659b-4325-968b-a114a6a067aa)]
interface nsIBrowserTab : nsISupports {
  readonly attribute mozIDOMWindowProxy window;
  readonly attribute float scale;
};

[scriptable, uuid(08426a73-e70b-4680-9282-630932e2b2bb)]
interface nsIUITelemetryObserver : nsISupports {
  void startSession(in wstring name,
                    in unsigned long timestamp);
  void stopSession(in wstring name,
                   in wstring reason,
                   in unsigned long timestamp);
  void addEvent(in wstring action,
                in wstring method,
                in unsigned long timestamp,
                in wstring extras);
};

[scriptable, uuid(0370450f-2e9c-4d16-b333-8ca6ce31a5ff)]
interface nsIAndroidBrowserApp : nsISupports {
  readonly attribute nsIBrowserTab selectedTab;
  nsIBrowserTab getBrowserTab(in int32_t tabId);
  nsIUITelemetryObserver getUITelemetryObserver();
};

[scriptable, uuid(92ae801d-da9c-4a24-b2b6-344c4af7008b)]
interface nsIAndroidViewport : nsISupports {
  readonly attribute float x;
  readonly attribute float y;
  readonly attribute int32_t width;
  readonly attribute int32_t height;
  readonly attribute float pageLeft;
  readonly attribute float pageTop;
  readonly attribute float pageRight;
  readonly attribute float pageBottom;
  readonly attribute float cssPageLeft;
  readonly attribute float cssPageTop;
  readonly attribute float cssPageRight;
  readonly attribute float cssPageBottom;
  readonly attribute float zoom;
};

[scriptable, uuid(e1bfbc07-dbae-409d-a5b5-ef57522c1f15)]
interface nsIAndroidDisplayport : nsISupports {
  attribute float left;
  attribute float top;
  attribute float right;
  attribute float bottom;
  attribute float resolution;
};

[scriptable, uuid(1beb70d3-70f3-4742-98cc-a3d301b26c0c)]
interface nsIAndroidBridge : nsISupports
{
  [implicit_jscontext] void handleGeckoMessage(in jsval message);
  attribute nsIAndroidBrowserApp browserApp;
  nsIAndroidDisplayport getDisplayPort(in boolean aPageSizeUpdate, in boolean isBrowserContentDisplayed, in int32_t tabId, in nsIAndroidViewport metrics);
  void contentDocumentChanged();
  boolean isContentDocumentDisplayed();
};
