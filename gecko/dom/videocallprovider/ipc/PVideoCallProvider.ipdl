/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set sw=2 ts=8 et ft=cpp : */
/* (c) 2017 KAI OS TECHNOLOGIES (HONG KONG) LIMITED All rights reserved. This
 * file or any portion thereof may not be reproduced or used in any manner
 * whatsoever without the express written permission of KAI OS TECHNOLOGIES
 * (HONG KONG) LIMITED. KaiOS is the trademark of KAI OS TECHNOLOGIES (HONG KONG)
 * LIMITED or its affiliate company and may be registered in some jurisdictions.
 * All other trademarks are the property of their respective owners.
 */

include protocol PTelephony;

/*
 * We need to provide custom serializer and deserializer.
 * Do it later.
 */

using nsVideoCallProfile from "mozilla/dom/videocallprovider/VideoCallIPCSerializer.h";
using nsVideoCallCameraCapabilities from "mozilla/dom/videocallprovider/VideoCallIPCSerializer.h";

namespace mozilla {
namespace dom {
namespace videocallprovider {

sync protocol PVideoCallProvider
{
  manager PTelephony;

child:
  async NotifyReceiveSessionModifyRequest(nsVideoCallProfile request);

  async NotifyReceiveSessionModifyResponse(uint16_t status,
                                           nsVideoCallProfile request,
                                           nsVideoCallProfile response);

  async NotifyHandleCallSessionEvent(uint16_t event);

  async NotifyChangePeerDimensions(uint16_t width, uint16_t height);

  async NotifyChangeCameraCapabilities(nsVideoCallCameraCapabilities capabilities);

  async NotifyChangeVideoQuality(uint16_t quality);

parent:
  /**
   * Send when child no longer needs to use PVideoCallProvider.
   */
  async __delete__();

  async SetCamera(int16_t cameraId);

  async SetPreviewSurface(uint16_t aWidth, uint16_t aHeight);

  async SetDisplaySurface(uint16_t aWidth, uint16_t aHeight);

  async SetDeviceOrientation(uint16_t orientation);

  async SetZoom(float value);

  async SendSessionModifyRequest(nsVideoCallProfile fromProfile, nsVideoCallProfile toProfile);

  async SendSessionModifyResponse(nsVideoCallProfile response);

  async RequestCameraCapabilities();
};

} // namespace videocallprovider
} // namespace dom
} // namespace mozilla
