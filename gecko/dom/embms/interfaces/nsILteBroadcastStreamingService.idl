/* (c) 2017 KAI OS TECHNOLOGIES (HONG KONG) LIMITED All rights reserved. This
 * file or any portion thereof may not be reproduced or used in any manner
 * whatsoever without the express written permission of KAI OS TECHNOLOGIES
 * (HONG KONG) LIMITED. KaiOS is the trademark of KAI OS TECHNOLOGIES (HONG KONG)
 * LIMITED or its affiliate company and may be registered in some jurisdictions.
 * All other trademarks are the property of their respective owners.
 */

#include "nsILteBroadcastService.idl"

interface nsILteBroadcastService;
interface nsILteBroadcastCallback;

[scriptable, uuid(9804b742-48ff-4d1d-9254-13b904b262c2)]
interface nsILteBroadcastStreamingService : nsILteBroadcastService
{
  /**
   * To start a streaming.
   * Caller expects to receive success event via nsILteBroadcastCallback::notifySuccess();
   * If aHandleId is invalid, nsILteBroadcastCallback::notifyError() will be invoked.
   */
  void start(in DOMString aHandleId, in nsILteBroadcastCallback aCb);

  /**
   * To stop a streaming.
   * Caller expects to receive success event via nsILteBroadcastCallback::notifySuccess();
   * If aHandleId is invalid, nsILteBroadcastCallback::notifyError() will be invoked.
   */
  void stop(in DOMString aHandleId, in nsILteBroadcastCallback aCb);
};
