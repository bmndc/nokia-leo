// Forked from MIT-licensed https://github.com/riggraz/no-style-please; see LICENSE
// Huge thanks to https://pedromarquez.dev/blog/2022/7/dark-mode-css

/* --- UNCOMMENT THIS IF YOU WISH TO USE NO-STYLE-PLEASE'S DEFAULT CONFIGURATION ---
@mixin dark-appearance {
	Attempt to create dark appearance by invert colour of the background and all items on the page in "light mode"
	Note that extensions like Dark Reader and Chrome's Auto Dark Mode flag will invert over this 
	See https://github.com/riggraz/no-style-please/blob/master/README.md#dark-mode-for-images
	filter: invert(1);

	By default, the invert(1) setting above will also invert the colours of images;
	this below setting re-invert inverted images so that they don't look weird
	img, .footnote-backref { 
		filter: invert(1);

		If the image is explicitly classified as "invert on dark appearance" (class="ioda"):
		let the invert(1) setting invert its colour. This would work best on black-and-white images
		&.ioda { 
			filter: invert(0);
		}
	}
}
================================================================================== */

@mixin dark-appearance {
	// Colour palette for dark mode
	--text-color: white;
	--bg-color: black;
	--link-color: yellow;
	--highlight-color: blue;
	--code-color: rgba(255, 255, 255, 0.1);
}

:root {
	// Colour palette for default/light mode
	--text-color: black;
	--bg-color: white;
	--link-color: darkblue;
	--highlight-color: yellow;
	--code-color: rgba(0, 0, 0, 0.05);
}

body[a="dark"] {
	// theme_config: Invert colors if 'appearance' is set to dark in _config.yml
	@include dark-appearance;
}

@media (prefers-color-scheme: dark) {
	/* theme_config: Also invert colors if 'appearance' is set to auto in _config.yml
	and browser suggests visitor prefers dark mode */
	body[a="auto"] {
		@include dark-appearance;
	}
}

html, body {
	/* Explicitly set html's background colour to white so that filter: invert() has something to work with
	See https://stackoverflow.com/a/61265706 */
	background: var(--bg-color); // default: black
}

html {
	height: 100%;
}

body {
	color: var(--text-color); // default: white
	font-family: -apple-system, BlinkMacSystemFont, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; // default: monospace
	font-size: 14px; // default: 16px
	line-height: 1.5; // default: 1.4
	margin: 0;
	min-height: 100%;
	overflow-wrap: break-word;
}

.post-meta {
	// Right-aligning metadata for posts (i.e. publishing date)
	text-align: right;
}

/* Add some spacing above section headings, paragraphs and bullet lists; stylise thematic breaks.
You're welcome to change the content of the thematic breaks as you wish */
h2, h3, h4, h5, h6 {
	margin-top: 3rem;
}

hr {
	font-family: monospace;
	margin: 2rem 0;
	text-align: center;
	border: 0;
	&:before {
		content: '/////'
	}
	&:after {
		content: attr(data-content) '/////'
	}
}

p {
	margin: 1rem 0;
}

a {
	color: var(--link-color); // default: blue
}

li {
	margin: 0.4rem 0 0.4rem -1rem; // Default is "0.4rem 0"; margin-left is deducted for viewing on mobile
}

*:target {
	// Highlight a section heading if it is referenced from a href
	background: var(--highlight-color);
}

:not(code) > .w {
	// div container for content
	max-width: 1083px; // Set content width, will dynamically adjust on mobile. Default is 640px;
	margin: 0 auto;	// Centre the content div;
	padding: 4rem .8rem; // Add spacing around content div. Default is "4rem 2rem"; margins are deducted for viewing on mobile
}

table {
	// Adjust table to fill content div width rather than dynamically to its content
	width: 100%;
}

table, th, td {
	border: thin solid var(--text-color); // too little border
	border-collapse: collapse; // too much border
	padding: 0.4rem; // Add content spacing for readability
}

:not(pre) > code {
	// Add visual colours for <code> to differentiate from surrounding paragraphs
	// color: var(--bg-color);
	background: var(--code-color);
}

pre {
	background: var(--code-color);
	overflow-x: auto;
	white-space: pre; // Allow code in codeblocks to be scrollable on smaller screens. Default is "pre-wrap"
	padding: 1rem; // Add spacing for content in codeblocks
}

blockquote {
	font-style: italic;	// Visually differentiates between blockquotes and surrounding paragraphs;
	border: thin solid var(--text-color);
	padding: 1rem; // Add spacing between the content in blockquote and the surrounding border
	p {
		margin: 0; // Overriding the paragraph spacing above as spacing is already added
	}
}

img {
	max-width: 100%; // Images are restricted to content div container width;
	display: block;
	margin: 0 auto;	// Centre the images; need "display: block" above
}

a.back_home_text {
	text-decoration: none;
}